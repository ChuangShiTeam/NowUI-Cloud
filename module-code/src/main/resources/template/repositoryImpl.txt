package com.nowui.cloud.${moduleName}.${packageName}.repository.impl;

import com.nowui.cloud.repository.impl.BaseRepositoryImpl;
import com.nowui.cloud.${moduleName}.${packageName}.repository.${firstUpperWithoutUnderlineEntityName}Repository;
import com.nowui.cloud.${moduleName}.${packageName}.view.${firstUpperWithoutUnderlineEntityName}View;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.stereotype.Component;

import java.util.List;

/**
 * ${tableComment}视图访问组件接口实现
 *
 * @author ${author}
 *
 * ${date}
 */
@Component
public class ${firstUpperWithoutUnderlineEntityName}RepositoryImpl extends BaseRepositoryImpl<${firstUpperWithoutUnderlineEntityName}View> implements ${firstUpperWithoutUnderlineEntityName}Repository {

    @Override
    public Integer countForAdmin(String appId<%for(column in searchColumnList){%>, String ${column.columnName}<%}%>) {
        Criteria criteria = Criteria.where(${firstUpperWithoutUnderlineEntityName}View.APP_ID).is(appId)
                <%for(column in searchColumnList){%>
                .and(${firstUpperWithoutUnderlineEntityName}.${column.upperWithUnderlineColumnName}).regex(".*?\\" + ${column.columnName} + ".*")
                <%}%>
                .and(${firstUpperWithoutUnderlineEntityName}View.SYSTEM_STATUS).is(true);

        Integer count = count(criteria);

        return count;
    }

    @Override
    public List<${firstUpperWithoutUnderlineEntityName}View> listForAdmin(String appId<%for(column in searchColumnList){%>, String ${column.columnName}<%}%>, Integer pageIndex, Integer pageSize) {
        Criteria criteria = Criteria.where(ProductView.APP_ID).is(appId)
                <%for(column in searchColumnList){%>
                .and(${firstUpperWithoutUnderlineEntityName}.${column.upperWithUnderlineColumnName}).regex(".*?\\" + ${column.columnName} + ".*")
                <%}%>
                .and(${firstUpperWithoutUnderlineEntityName}View.SYSTEM_STATUS).is(true);

        List<${firstUpperWithoutUnderlineEntityName}View> ${firstLowerWithoutUnderlineEntityName}ViewList = list(criteria, pageIndex, pageSize);

        return ${firstLowerWithoutUnderlineEntityName}ViewList;
    }

}
